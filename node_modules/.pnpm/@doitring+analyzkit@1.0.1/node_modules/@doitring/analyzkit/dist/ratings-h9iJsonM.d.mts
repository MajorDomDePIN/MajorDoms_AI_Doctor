import * as dayjs from 'dayjs';

interface Data {
    value: number;
    date: number;
}
interface Step {
    value: number;
    date: number;
    kcal: number;
    km: number;
}

declare function sleeps(data: Data[]): {
    durations: {
        dep: number;
        lig: number;
        rem: number;
        act: number;
        tol: number;
    };
    percents: {
        dep: number;
        lig: number;
        rem: number;
    };
    scores: {
        lig: number;
        dep: number;
        dur: number;
    };
    score: number;
    evals: {
        com: "high" | "normal" | "low";
        dep: "high" | "normal" | "low";
        lig: "high" | "normal" | "low";
        rem: "high" | "normal" | "low";
    };
};
declare function steps(data: Step[], target?: number): {
    eval: "high" | "low" | "lack";
    kcal: string;
    km: string;
    total: number;
    score: number;
    hours: {
        hour: string;
        time: dayjs.Dayjs;
        data: Step[];
        kcal: string;
        km: string;
        total: number;
    }[];
};
declare function oxygens(data: Data[]): {
    score: number;
    hours: {
        hour: string;
        time: dayjs.Dayjs;
        data: Data[];
        average: number;
        min: number;
        max: number;
    }[];
    eval: "normal" | "abnormal" | "danger";
    average: number;
    min: number;
    max: number;
};
declare function rates(data: Data[]): {
    eval: "normal" | "abnormal";
    average: number;
    hours: {
        hour: string;
        time: dayjs.Dayjs;
        data: Data[];
        average: number;
        min: number;
        max: number;
    }[];
    min: number;
    max: number;
    score: number;
};

declare const ratings_oxygens: typeof oxygens;
declare const ratings_rates: typeof rates;
declare const ratings_sleeps: typeof sleeps;
declare const ratings_steps: typeof steps;
declare namespace ratings {
  export { ratings_oxygens as oxygens, ratings_rates as rates, ratings_sleeps as sleeps, ratings_steps as steps };
}

export { type Data as D, type Step as S, steps as a, rates as b, oxygens as o, ratings as r, sleeps as s };
